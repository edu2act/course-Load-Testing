数据驱动
1、注意：文件类型编码 ANSI，否则获得数据中文乱码
${__CSVRead(d:/demo/userdata2.csv,1)}
实验1：__CSVRead
1）准备数据
界面错误,验收测试
代码错误,单元测试
数据库错误,性能测试
操作：
2）BeanShell 取样器  
System.out.println("${__CSVRead(d:/demo/userdata2.csv,1)}");
3）察看结果树
注意设置线程数为3
实验2 ：配置元件/用户定义变量
适合于1对1参数化的方式
实验3：前置处理器/用户参数
适合于1对多参数化的方式，少量的参数化
实验4：配置元件/CSV 数据文件设置
适合于大数据量的参数化
实验5：数据库的参数化

dev 添加测试用例，添加Bug
参数化+加数据控制




准备：
bugfree后台创建两个用户dev teser，创建一个用户组group1，为产品分配用户组
1、使用admin采用模板方式录制 登录，添加bug，添加用例，退出
2、调试，post请求中文编码
3、参数化 -CSV数据文件设置
4、添加if控制器1
"${username}"=="dev"  注意：取消表达式的选项
添加Bug
5、添加if控制器2
"${username}"=="tester"  
添加测试用例
6、查看结果树
7、运行，查看系统是否dev创建了Bug，tester创建了测试用例
"${username}"=="dev"  注意：取消表达式的选项

